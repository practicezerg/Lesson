# Циклы в программировании. Цикл while
# Измените последний код из урока так, чтобы переменная total не могла уйти в минус.
# Например, после предыдущих вычитаний ее значение стало равным 25. Пользователь вводит число 30.
# Однако программа не выполняет вычитание, а выводит сообщение о недопустимости операции, после чего осуществляет выход из цикла.
# Используя цикл while, выведите на экран для числа 2 его степени от 0 до 20. Возведение в степень в Python обозначается как **. Фрагмент вывода:

# n = input("Введите целое число: ")
#
# while type(n) != int:   #В выражении type(n) != int с помощью функции type() проверяется тип переменной n.
#                         # Если он не равен int, то есть значение n не является целым числом, а является в данном случае строкой, то выражение возвращает истину.
#                         # Если же тип n равен int, то данное логическое выражение возвращает ложь.
#     try:
#         n = int(n)
#     except ValueError:
#         print("Неправильно ввели!")
#         n = input("Введите целое число: ")
#
# if n % 2 == 0:  #Оператор % в языке Python используется для нахождения остатка от деления.
#                 # Так, если число четное, то оно без остатка делится на 2, то есть остаток будет равен нулю. Если число нечетное, то остаток будет равен единице.
#     print("Четное")
# else:
#     print("Нечетное")

# total = 100
# i = 0
# while i < 5:
#     n = int(input())
#     total = total - n
#     i = i + 1
#
# print("Осталось", total)


# total = 100
# n = int(input())
# while total - n > 0:
#     total = total - n
#     n = int(input())
# print("Ресурс исчерпан")

n = 2
i = 0
while i <= 20:
    c = n ** i
    i = i + 1    # i += 1    это альтернатива
    print(c)

