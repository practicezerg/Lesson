Формат лога

2023-08-21 from_files_for_tvip_err_5min_by_one_day.py    start 10:50:39 stop 10:50:39 duration 0:00:00.

####################Python####################################################################################################
####################Python####################################################################################################

def pass_txt():
    with open("/home/iptv/jung/auth.txt", "r", encoding="utf-8") as r:
        data = r.readlines()
        login = data[0].rstrip()
        psw = data[1].rstrip()
        psw2 = data[2].rstrip()
        return login, psw, psw2



def write_log(start_time, end_time):
    date_for_log = datetime.now().date()
    text_for_log = f"{date_for_log} from_files_for_tvip_err_5min_by_one_day.py    start {start_time.time()} stop {end_time.time()} duration {end_time-start_time}.\n"  
    with open("/home/iptv/log_for_cron.txt", "a") as f:
       f.write(text_for_log)

 def main():
    start_time = datetime.now().replace(microsecond=0)
    log, psw, psw2 = pass_txt()


    end_time = datetime.now().replace(microsecond=0)
    write_log(start_time, end_time)






Вставка записи ошибок в созданый файл

    except Exception as e:
        with open("/home/iptv/jung/log_error_from_my_scripts.txt", "a") as w:
            date_for_log = datetime.now().date()
            msg_for_error = f"{date_for_log} sql_trancate_5min_hour_stat.py\n Ошибка  = {str(e)}\n{'*'*100}"
            w.write(msg_for_error)
        return e
####################Bash####################################################################################################
####################Bash####################################################################################################
Bash version


#!/bin/bash

start_bash=$(date +%H:%M:%S)
date_for_log=`date '+%Y-%m-%d'`
start_bash_sec=$(date +%s)


sleep 35
###Code here###

end_bash=$(date +%H:%M:%S)
end_bash_sec=$(date +%s)
res_time=$(( $end_bash_sec - $start_bash_sec ))
hours=$((res_time / 3600))
minutes=$(( (res_time % 3600) / 60 ))
seconds=$((res_time % 60))

formatted_time=$(printf "%02d:%02d:%02d" $hours $minutes $seconds)

printf "$date_for_log     name_script	start $start_bash stop $end_bash duration $formatted_time\n" >> /home/iptv/log_for_cron.txt

#send tg
telegram_bot_token="token"
chat_id="chat_id"

send_telegram_message() {
    curl -s -X POST "https://api.telegram.org/bot$telegram_bot_token/sendMessage" -d "chat_id=$chat_id" -d "text=$1"
}
message="$date_for_log sql_dump_for_upperdeck.sh start $start_bash stop $end_bash duration $formatted_time"
send_telegram_message "$message"
